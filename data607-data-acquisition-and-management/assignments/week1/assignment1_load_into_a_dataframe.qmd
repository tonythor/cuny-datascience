---
title: "Assignment One, Using Dataframes"
format: 
  pdf: 
    fontfamily: libertinus
    colorlinks: true
---
## About this project
For three reasons I spent a lot of time on this project. First, data engineering 
is my wheelhouse. I am an experienced, full time lead/principal data engineer for
NBC. Second, I am an amateur historian for the period between about 1890 and 
1950. And lastly, I have used these two base data sets to practice programming 
and plotting before. That said, I figured even if I only scratched the 
surface of something, it better be well wrangled, interesting, and provocative. 

I didn't know what I was going to do with this project when I started. I came
up with the idea to standardize and union because I have never done that with
these two datasheets before. I figured if I transformed it into a single data set,
I might be able to find or discover something different.

Sure enough, after all the wrangling, I saw something right of the gate. From
there I titled my paper, and spent a lot of time trying to get the graphs to show
exactly what I saw. 


# Load, Clean and Standardize Data
```{r setup, results='hide', message=FALSE, warning=FALSE}
# First load data. 
library(sqldf)
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
g_repo = "https://raw.githubusercontent.com/tonythor/cuny-datascience/" 
lf =  paste(g_repo,"develop/data/lusitania_manifest.csv", sep = "")
tf =  paste(g_repo,"develop/data/titanic_lifeboats.csv", sep="")
titanic <- read.csv(tf)
lusitania <- read.csv(lf)

## Clean and standardize the titanic data set
titanic[c('last_name', 'first_name')]<- str_split_fixed(titanic$name, ',', 2)
replacements  = c('Miss.'='','Master.'='', 'Mrs.'='', 'Mister.'='', 'Mr.'='')
titanic$first_name<- str_replace_all(titanic$first_name, replacements )
titanic <- dplyr::rename(titanic, c("gender" = "sex"), c("lifeboat" = "boat"))
titanic_boat= c("titanic")
titanic$boat = titanic_boat
titanic <- titanic %>% mutate_at(c('age'), ~replace_na(.,0))
titanic <- titanic %>%   mutate(age = as.numeric(age))
# Could be any column name to filter not. Last row is empty and needs to be dropped. 
titanic <- titanic %>% filter(!last_name=='')
titanic_clean <- titanic %>% select(boat,last_name, first_name, 
                                    survived, gender, age, lifeboat)
## Clean and standardize the Lusitania data set
lusitania_boat= c("lusitania")
lusitania$boat = lusitania_boat
lusitania <- dplyr::rename(lusitania, c("first_name" = "Personal.name"), 
                           c("last_name" = "Family.name"),
                           c("lifeboat" = "Lifeboat"),
                           c("age" = "Age"),
                           c("gender" = "Sex"))
lusitania <- lusitania %>%  mutate(age = as.numeric(age))
lusitania <- lusitania %>% mutate_at(c('age'), ~replace_na(.,0))
lusitania = lusitania %>% mutate(survived = case_when(grepl("Saved", Fate) ~ 1,
                                                      .default = 0)) 
lusitania$gender <- tolower(lusitania$gender)
lusitania$last_name <- str_to_title(lusitania$last_name)
lusitania_clean <- lusitania %>% select(boat,last_name, first_name, survived, 
                                        gender, age, lifeboat)
## uninion the data sets into one, add a numerical categorical flag for gender
boats = union(lusitania_clean,titanic_clean)

```